services:
  db: 
    image: mariadb:latest
    hostname: db
    ports:
      - 3306:3306
    volumes:
    # Mount in the custom my.cnf file and run the init.sql script to create the
    # database and user upon first run. The init.sql script will be provided by 
    # one of the development team. 
      - ./docker/my.cnf:/etc/mysql/my.cnf
      - ./data/init.sql:/docker-entrypoint-initdb.d/1.sql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MARIADB_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: healthcheck.sh --su-mysql --connect --innodb_initialized
      timeout: 5s
      retries: 10

  adminer:
    depends_on:
      - db
    image: adminer
    restart: always
    ports:
      - 8080:8080

  atlas-web:
    build: .
    image: local/psat-server-web
      # Commands for running migrations, which are only needed when database
      # schema changes. 
    command: >
      sh -c "python manage.py collectstatic --noinput
      && python manage.py makemigrations --noinput 
      && python manage.py migrate --noinput 
      && ./generate_mod_wsgi_apachectl.sh 
      && sleep infinity"
    hostname: psat-server-web
    restart: always
    volumes:
    # Mount the code directories into the image to allow for live code changes
      - ./data/db_data:/images 
      - ./psat_server_web/atlas/atlasapi:/app/psat_server_web/atlas/atlasapi
      - ./psat_server_web/atlas/atlas:/app/psat_server_web/atlas/atlas
      - ./psat_server_web/atlas/templates:/app/psat_server_web/atlas/templates
      - ./psat_server_web/atlas/accounts:/app/psat_server_web/atlas/accounts
      - ./psat_server_web/atlas/tests:/app/psat_server_web/atlas/tests
      - ./psat_server_web/atlas/templates:/app/psat_server_web/atlas/templates
    ports:
      - 8086:8086
    depends_on:
      - db
    environment:
      - WSGI_PREFIX=/atlas
      - WSGI_PORT=8086
      - DJANGO_MYSQL_DBNAME=${MYSQL_DATABASE}
      - DJANGO_MYSQL_DBUSER=${DJANGO_MYSQL_DBUSER}
      - DJANGO_MYSQL_DBPASS=${MYSQL_PASSWORD}
      - DJANGO_MYSQL_DBHOST=db
      - DJANGO_MYSQL_DBPORT=3306
      - DJANGO_SECRET_KEY=secret
      - DJANGO_TNS_DAEMON_SERVER=psat-server-web
      - DJANGO_TNS_DAEMON_PORT=8001
      - DJANGO_MPC_DAEMON_SERVER=psat-server-web
      - DJANGO_MPC_DAEMON_PORT=8002
      - DJANGO_NAME_DEAMON_SERVER=psat-server-web
      - DJANGO_NAME_DEAMON_PORT=8003
      - DJANGO_NAMESERVER_MULTIPLIER=10000000
      - DJANGO_NAMESERVER_TOKEN=''
      - DJANGO_NAMESERVER_API_URL=''
      - DJANGO_LASAIR_TOKEN=${DJANGO_LASAIR_TOKEN}
      - DJANGO_DUSTMAP_LOCATION=/tmp/dustmap
      - API_TOKEN_EXPIRY=10
      - DJANGO_LOG_LEVEL=DEBUG
      - DJANGO_DEBUG=True
      - DJANGO_PANSTARRS_TOKEN=${PANSTARRS_TOKEN}
      - DJANGO_PANSTARRS_BASE_URL=${PANSTARRS_BASE_URL}

  tests:
    build: .
    image: local/psat-server-web
      # Run the tests, using the root user to avoid permission issues
    command: >
      bash -c "
      python manage.py makemigrations --noinput && 
      mysql -h db -u root -p${MYSQL_ROOT_PASSWORD} < sql/init.sql &&
      cd ../schema &&
      mysql -h db -u root -p${MYSQL_ROOT_PASSWORD} ${MYSQL_TEST_DATABASE} < create_schema.sql &&
      cd ../atlas &&
      python manage.py test --keepdb --noinput
      || exit $?"
    volumes:
    # Mount the code directories into the image to allow for live code changes
    # while we develop
      - ./data/db_data:/images 
      - ./psat_server_web/atlas/atlasapi:/app/psat_server_web/atlas/atlasapi
      - ./psat_server_web/atlas/atlas:/app/psat_server_web/atlas/atlas
      - ./psat_server_web/atlas/accounts:/app/psat_server_web/atlas/accounts
      - ./psat_server_web/atlas/tests:/app/psat_server_web/atlas/tests
      - ./psat_server_web/schema:/app/psat_server_web/schema
      - ./docker/init.sql:/app/psat_server_web/atlas/sql/init.sql
    ports:
      - 8087:8087
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      - WSGI_PREFIX=/atlas
      - WSGI_PORT=8087
      - DJANGO_DB_ENGINE=django.db.backends.mysql
      - DJANGO_MYSQL_DBNAME=${MYSQL_TEST_DATABASE}
      - DJANGO_MYSQL_DBUSER=${MYSQL_TEST_USER}
      - DJANGO_MYSQL_DBPASS=${MYSQL_TEST_PASSWORD}
      - DJANGO_MYSQL_DBHOST=db
      - DJANGO_MYSQL_DBPORT=${MYSQL_TEST_PORT}
      - DJANGO_MYSQL_TEST_DBNAME=${MYSQL_TEST_DATABASE}
      - DJANGO_MYSQL_TEST_DBPORT=${MYSQL_TEST_PORT}
      - DJANGO_MYSQL_TEST_DBUSER=${MYSQL_TEST_USER}
      - DJANGO_MYSQL_TEST_DBPASS=${MYSQL_TEST_PASSWORD}
      - DJANGO_SECRET_KEY=secret
      - DJANGO_TNS_DAEMON_SERVER=psat-server-web
      - DJANGO_TNS_DAEMON_PORT=8001
      - DJANGO_MPC_DAEMON_SERVER=psat-server-web
      - DJANGO_MPC_DAEMON_PORT=8002
      - DJANGO_NAME_DEAMON_SERVER=psat-server-web
      - DJANGO_NAME_DEAMON_PORT=8003
      - DJANGO_NAMESERVER_MULTIPLIER=10000000
      - DJANGO_NAMESERVER_TOKEN=''
      - DJANGO_NAMESERVER_API_URL=''
      - DJANGO_LASAIR_TOKEN=${DJANGO_LASAIR_TOKEN}
      - DJANGO_DUSTMAP_LOCATION=/tmp/dustmap
      - DJANGO_LOG_LEVEL=ERROR
      - API_TOKEN_EXPIRY=10
      - DJANGO_PANSTARRS_TOKEN=${PANSTARRS_TOKEN}
      - DJANGO_PANSTARRS_BASE_URL=${PANSTARRS_BASE_URL}